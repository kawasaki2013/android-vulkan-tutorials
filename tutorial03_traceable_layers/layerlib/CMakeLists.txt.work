cmake_minimum_required(VERSION 3.4.1)
include(ExternalProject)

# build layer_utils as a static lib
set(NDK_SRC_DIR ${ANDROID_NDK}/sources)
set(SRC_DIR ${NDK_SRC_DIR}/third_party/vulkan/src)
set(LAYER_DIR ${SRC_DIR}/build-android/generated)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Werror -Wno-unused-function \
                     -Wno-unused-const-variable -Wno-c++98-compat-pedantic")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DVK_PROTOTYPES")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DVK_USE_PLATFORM_ANDROID_KHR")

include_directories(${SRC_DIR}/include
                    ${SRC_DIR}/layers
                    ${SRC_DIR}/loader)
add_library(layer_utils STATIC
        ${LAYER_DIR}/common/vk_layer_config.cpp
        ${LAYER_DIR}/common/vk_layer_extension_utils.cpp
        ${LAYER_DIR}/common/vk_layer_utils.cpp)

# build vulkan layers
set(VK_WRAPPER_DIR ../../../../../common/vulkan_wrapper)

# piggy back on the previous CXX_FLAGS
include_directories(${LAYER_DIR}/include ${SRC_DIR}/../glslang)

# adding header files
include_directories(${NDK_SRC_DIR}/third_party/shaderc/third_party/glslang
                    ${NDK_SRC_DIR}/third_party/shaderc/third_party/spirv-tools/include)

add_library(VkLayer_core_validation SHARED
            ${LAYER_DIR}/layer-src/core_validation/core_validation.cpp
            ${LAYER_DIR}/layer-src/core_validation/descriptor_sets.cpp
            ${LAYER_DIR}/layer-src/core_validation/vk_safe_struct.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp )

# follow this instructions here:
# http://stackoverflow.com/questions/31161036/cmake-dependencies-force-recompile-on-external-library-change
ExternalProject_Add(
    BuildShaderc
    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}
    CONFIGURE_COMMAND mkdir -p ${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc
    BUILD_COMMAND ${ANDROID_NDK}/ndk-build -j8 NDK_PROJECT_PATH=${ANDROID_NDK}/sources/third_party/shaderc NDK_OUT=${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc NDK_LIBS_OUT=${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc/libs NDK_APPLICATION_MK=/Users/gfan/tmp/Application.mk APP_BUILD_SCRIPT=${ANDROID_NDK}/sources/third_party/shaderc/Android.mk
    BUILD_ALWAYS 1    # Force build
    # BUILD_ALWAYS 1
    BUILD_BYPRODUCTS ${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc/local/${ANDROID_ABI}/libglslang.a
    BUILD_BYPRODUCTS ${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc/local/${ANDROID_ABI}/libSPIRV-Tools.a
    INSTALL_COMMAND ""
)
add_dependencies(VkLayer_core_validation BuildShaderc)
set(lib_glslang ${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc/local/${ANDROID_ABI}/libglslang.a)
set(lib_SPIRV-Tools ${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc/local/${ANDROID_ABI}/libSPIRV-Tools.a)

#add_dependencies(${lib_glslang} BuildShaderc)
#add_dependencies(${lib_SPIRV-Tools} BuildShaderc)

# Bug: the following lines should be done after ExternalProject_Add is done
target_link_libraries(VkLayer_core_validation log android layer_utils ${lib_glslang} ${lib_SPIRV-Tools})
#target_link_libraries(VkLayer_core_validation log android layer_utils)

#get_cmake_property(_variableNames VARIABLES)

#add_library(lib_glslang STATIC IMPORTED )
#set_target_properties(lib_glslang PROPERTIES IMPORTED_LOCATION
#                     ${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc/local/${ANDROID_ABI}/libglslang.a)
#add_library(lib_SPIRV-Tools STATIC IMPORTED )
#set_target_properties(lib_SPIRV-Tools PROPERTIES IMPORTED_LOCATION
#    ${CMAKE_CURRENT_SOURCE_DIR}/build/shaderc/local/${ANDROID_ABI}/libSPIRV-Tools.a)

#add_dependencies(lib_glslang build_shaderc)
#add_dependencies(lib_SPIRV-Tools build_shaderc)

if(${ANDROID_NDK_REVISION} LESS 13)
add_library(VkLayer_device_limits SHARED
            ${LAYER_DIR}/layer-src/device_limits/device_limits.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp)
target_link_libraries(VkLayer_device_limits log android layer_utils)
endif(${ANDROID_NDK_REVISION} LESS 13)

add_library(VkLayer_image SHARED
            ${LAYER_DIR}/layer-src/image/image.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp)
target_link_libraries(VkLayer_image log android layer_utils)

add_library(VkLayer_parameter_validation SHARED
            ${LAYER_DIR}/layer-src/parameter_validation/parameter_validation.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp)
target_link_libraries(VkLayer_parameter_validation log android layer_utils)

add_library(VkLayer_object_tracker SHARED
            ${LAYER_DIR}/layer-src/object_tracker/object_tracker.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp)
target_link_libraries(VkLayer_object_tracker log android layer_utils)

add_library(VkLayer_threading SHARED
            ${LAYER_DIR}/layer-src/threading/threading.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp)
target_link_libraries(VkLayer_threading log android layer_utils)

add_library(VkLayer_unique_objects SHARED
            ${LAYER_DIR}/layer-src/unique_objects/unique_objects.cpp
            ${LAYER_DIR}/layer-src/unique_objects/vk_safe_struct.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp)
target_link_libraries(VkLayer_unique_objects log android layer_utils)

add_library(VkLayer_swapchain SHARED
            ${LAYER_DIR}/layer-src/swapchain/swapchain.cpp
            ${LAYER_DIR}/common/vk_layer_table.cpp)
target_link_libraries(VkLayer_swapchain log android layer_utils)
